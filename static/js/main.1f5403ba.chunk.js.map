{"version":3,"sources":["logo.svg","TagedItems.js","Preview.js","TagList.js","App.js","registerServiceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","TaggedItems","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","tagJsonPath","imagesJsonPath","handleDescrptionChange","e","console","log","target","value","setState","description","state","currentImage","updateJSON","handleTitleChange","title","loadImageTags","index","ele","currentRid","selectedTag","images","filter","tags","indexOf","currentImageTagIds","currentImageTags","suggestions","isLoading","tagModified","reactTags","React","createRef","_this2","JSON","parse","localStorage","getItem","tagged","tagList","searchResult","axios","get","then","response","data","setItem","stringify","getTagListData","updated","map","el","i","slice","splice","modifiedTags","tag","concat","_this3","react_default","a","createElement","Fragment","Button","variant","disabled","Spinner","as","animation","size","role","aria-hidden","className","b","length","arraysEqual","id","Card","Header","Badge","Title","name","Body","js","onChange","dynamicHeight","showIndicators","img","key","style","textAlign","type","path","width","height","src","onError","onerror","ReactTags_umd_default","ref","autoresize","onDelete","bind","onAddition","minQueryLength","classNames","root","rootFocused","selected","selectedTagName","search","searchWrapper","searchInput","suggestionActive","suggestionDisabled","Component","Preview","handleInputChange","prevProps","val","getTagDetails","showPreview","bsStyle","float","Img","Text","TagsList","matching","push","_this4","_this5","placeholderText","block","onClick","TagedItems_TaggedItems","Preview_Preview","App","BrowserRouter","basename","process","Switch","Route","exact","render","Redirect","to","component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","error","ReactDOM","src_App_0","document","getElementById","URL","origin","addEventListener","fetch","status","headers","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.1f5403ba.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react';\nimport axios from 'axios'\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\"; // requires a loader\nimport { Carousel } from 'react-responsive-carousel';\nimport ReactTags from 'react-tag-autocomplete'\nimport { HashLink as Link } from 'react-router-hash-link';\nimport './styles.css'\nimport Card from 'react-bootstrap/Card';\nimport Spinner from 'react-bootstrap/Spinner';\nimport Button from 'react-bootstrap/Button';\nimport Badge from 'react-bootstrap/Badge';\n\n\nexport default class TaggedItems extends Component {\n\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      tags: [],\n      isLoading: true,\n      tagModified: false,\n      title: '',\n      description: ''\n    }\n    this.reactTags = React.createRef();\n  }\n\n  tagJsonPath = '/taglist/assets/tags/tags.json'\n  imagesJsonPath = '/taglist/assets/tags/images.json'\n\n  getTagListData() {\n    //assets/tags/taglist.json\n    let images = JSON.parse(localStorage.getItem('images'));\n    let tags = JSON.parse(localStorage.getItem('tags'));\n\n    if (images && tags) {\n      let currentRid = this.props.selectedTag['@rid'];\n      let tagged = images.filter(e => {\n        if (e.tags && e.tags.indexOf(currentRid) > -1) return e\n      });\n\n      let currentImage = tagged[0] ? tagged[0] : [];\n      let currentImageTagIds = currentImage.tags ? currentImage.tags : [];\n      let currentImageTags = tags.filter(e => {\n        if (currentImageTagIds.indexOf(e['@rid']) > -1) return e\n      });\n      this.setState({\n        tagList: tags, searchResult: tags,\n        suggestions: tags, tags: currentImageTags, tagged: tagged,\n        currentImage: currentImage, images: images, isLoading: false,\n        title: currentImage.title, description: currentImage.description\n      })\n    } else {\n      axios.get(this.tagJsonPath).then(response => {\n        axios.get(this.imagesJsonPath).then(images => {\n          let currentRid = this.props.selectedTag['@rid'];\n          let tagged = images.data.filter(e => {\n            if (e.tags && e.tags.indexOf(currentRid) > -1) return e\n          });\n\n          let currentImage = tagged[0] ? tagged[0] : [];\n          let currentImageTagIds = currentImage.tags ? currentImage.tags : [];\n          let currentImageTags = response.data.filter(e => {\n            if (currentImageTagIds.indexOf(e['@rid']) > -1) return e\n          });\n          localStorage.setItem('images', JSON.stringify(images.data));\n          localStorage.setItem('tags', JSON.stringify(response.data));\n          // console.log('inTagList ::::', currentImage, currentImageTagIds, currentImageTags);\n          this.setState({\n            tagList: response.data, searchResult: response.data,\n            suggestions: response.data, tags: currentImageTags, tagged: tagged,\n            currentImage: currentImage, images: images.data, isLoading: false,\n            title: currentImage.title, description: currentImage.description\n          })\n        });\n      })\n    }\n  };\n  //function which is called the first time the component loads\n  componentDidMount() {\n    this.getTagListData();\n  }\n\n  updateJSON() {\n    this.state.currentImage.updated = true;\n    this.state.images.map(el => {\n      if (el.updated) {\n        console.log('modified :', el);\n      }\n    });\n  }\n\n  onDelete(i) {\n    const tags = this.state.tags.slice(0)\n    tags.splice(i, 1)\n    const modifiedTags = tags.map(el => {\n      return el['@rid'];\n    });\n    console.log(\"modified Tag\" + modifiedTags);\n    this.state.currentImage.tags = modifiedTags;\n    this.updateJSON();\n    this.setState({ tags, tagModified: true })\n    // let selectedTag = this.state.tagList.filter(e => { if (e.id === currentRid) return e })[0];\n    // this.updateJSON();\n  }\n\n\n  onAddition(tag) {\n    const tags = [].concat(this.state.tags, tag)\n    const modifiedTags = tags.map(el => {\n      return el['@rid'];\n    });\n    console.log(\"modified Tag\" + modifiedTags);\n    this.state.currentImage.tags = modifiedTags;\n    this.updateJSON();\n    this.setState({ tags, tagModified: true })\n    // this.updateJSON();\n  }\n\n  handleDescrptionChange = (e) => {\n    console.log('in input change', e.target.value);\n    this.setState({ description: e.target.value })\n    this.state.currentImage.description = e.target.value;\n    this.updateJSON();\n    return e.target.value;\n\n  }\n\n  handleTitleChange = (e) => {\n    console.log('in input change', e.target.value);\n    this.setState({ title: e.target.value });\n    this.state.currentImage.title = e.target.value;\n    this.updateJSON();\n    return e.target.value;\n  }\n\n  loadImageTags = (index, ele) => {\n    let currentRid = this.props.selectedTag['@rid'];\n    let images = this.state.images;\n    // let currentRid = selectedTag; //this.props.selectedTag['@rid'];\n    let tagged = images.filter(e => {\n      if (e.tags && e.tags.indexOf(currentRid) > -1) return e\n    });\n    let currentImage = tagged[index];\n    // let imageTags = currentImage.tags ? currentImage.tags : [];\n    let currentImageTagIds = currentImage.tags ? currentImage.tags : [];\n    // console.log('imageTags', imageTags);\n    let tags = this.state.suggestions; // all tags\n    let currentImageTags = tags.filter(e => {\n      if (currentImageTagIds.indexOf(e['@rid']) > -1) return e\n    });\n    console.log('Selected Image, tag Ids, tags', currentImage, currentImageTagIds, currentImageTags)\n\n    return this.setState({ tags: currentImageTags, currentImage: currentImage, title: currentImage.title, description: currentImage.description });\n  }\n\n\n  render() {\n    if (this.state.isLoading) return (\n      <>\n        <Button variant=\"primary\" disabled>\n          <Spinner\n            as=\"span\"\n            animation=\"border\"\n            size=\"sm\"\n            role=\"status\"\n            aria-hidden=\"true\"\n          />\n          <span className=\"sr-only\">Loading...</span>\n        </Button>{' '}\n        <Button variant=\"primary\" disabled>\n          <Spinner\n            as=\"span\"\n            animation=\"grow\"\n            size=\"sm\"\n            role=\"status\"\n            aria-hidden=\"true\"\n          />\n        Loading...\n      </Button>\n      </>);\n\n    let currentRid = this.props.selectedTag['@rid'];\n    let selectedTag = this.props.selectedTag;\n\n    let tags = this.state.suggestions;\n    let images = this.state.images;\n\n    // let currentRid = selectedTag; //this.props.selectedTag['@rid'];\n    console.log('images   ', images)\n    let tagged = images.filter(e => {\n      if (e.tags && e.tags.indexOf(currentRid) > -1) return e\n    });\n\n    //no change if tag is not modified\n    if (!this.state.tagModified) {\n      let currentImage = tagged[0] ? tagged[0] : [];\n      let currentImageTagIds = currentImage.tags ? currentImage.tags : [];\n      let currentImageTags = tags.filter(e => {\n        if (currentImageTagIds.indexOf(e['@rid']) > -1) return e\n      });\n      // current image tags is not equal to currentTags, means a diffrent Tag is clicked?\n      if (!arraysEqual(currentImageTags, this.state.tags)) {\n        this.setState({ tags: currentImageTags, tagModified: false, title: currentImage.title, description: currentImage.description })\n      }\n    }\n    function arraysEqual(a, b) {\n      if (a === b) return true;\n      if (a == null || b == null) return false;\n      if (a.length !== b.length) return false;\n\n      // If you don't care about the order of the elements inside\n      // the array, you should sort both arrays here.\n      // Please note that calling sort on an array will modify that array.\n      // you might want to clone your array first.\n\n      for (var i = 0; i < a.length; ++i) {\n        if (a[i] !== b[i]) return false;\n      }\n      return true;\n    }\n\n    //TODO:similar Tags\n    // let similarImageIds = currentImage.in_Similar.delegate.entries ? currentImage.in_Similar.delegate.entries : []; //[\"#38:0\", \"#38:1\", \"#38:2\"]\n    // let similarImage = images.filter(e => {\n    //   // console.log(similarImageIds, e['@rid'], e.name);\n    //   if (similarImageIds.indexOf(e['@rid']) > -1) return e\n    // });\n    // let similarImageTags = this.state.similarImageTags ? this.state.image.similarImageTags :\n    //   tags.filter(e => {\n    //     if (similarImageIds.indexOf(e['@rid']) > -1) return e\n    //   });\n\n    // console.log('From renderer selectedTag', selectedTag, currentImage, currentImageTags);\n    return (\n      <div>\n        <div id=\"editTags\">\n          <Card className=\"centeralign\">\n            <Card.Header>\n              <center><Badge><h3><b>Edit Tags</b></h3></Badge></center>\n              <Card.Title><b>Tag Name:</b> <div className=\"badge primary\">{selectedTag.name}&nbsp;</div>  <b>Description:</b>{selectedTag.description}</Card.Title>\n              {/* <b>ParentTags:</b> {selectedTag.parentTags.map(tag => {\n            return (tag === \"\" ? \"\" : <div className=\"badge primary\">{tag}&nbsp;</div>);\n          })} */}\n              {/* <b>ChildTags:</b> {selectedTag.childTags.map(tag => {\n              return (tag === \"\" ? \"\" : <div className=\"badge primary\">{tag}&nbsp;</div>);\n            })} */}\n              <center>This Tag is taggged to below images, each image will have their own tag list, which can be added or removed.</center>\n              {/* <Link to={{ pathname: \"/taglist#preview\", id: currentRid }} className=\"btn btn-primary\">Preview</Link> */}\n            </Card.Header>\n            <Card.Body>\n              <br />\n              <Carousel onChange={(index, ele) => this.loadImageTags(index, ele)} dynamicHeight={true} showIndicators={false}\t>\n                {tagged.map(img => {\n                  return (<div key={img['@rid']}>\n                    <form style={{ 'textAlign': 'left' }}>\n                      <label>Title: </label><input className=\"form-control\" name=\"title\"\n                        type=\"text\"\n                        value={this.state.title}\n                        onChange={this.handleTitleChange} />\n                      <label>Description: </label><input className=\"form-control\" name=\"description\"\n                        type=\"text\"\n                        value={this.state.description}\n                        onChange={this.handleDescrptionChange} />\n                    </form>\n\n                    File:{img.name}, Path: {img.path}, Title: {img.title}, Dimension:{img.width}x{img.height}\n                    <img src={\"http://drive.google.com/thumbnail?id=\" + img.id} onError={(e) => { e.target.onerror = null; e.target.src = \"https://via.placeholder.com/600x200.png?text=...\" }} />\n                    <br />\n\n                  </div>);\n                })}\n              </Carousel>\n              <ReactTags\n                ref={this.reactTags}\n                tags={this.state.tags}\n                autoresize={false}\n                suggestions={this.state.suggestions}\n                onDelete={this.onDelete.bind(this)}\n                onAddition={this.onAddition.bind(this)}\n                minQueryLength={1}\n                classNames={{\n                  root: 'react-tags',\n                  rootFocused: 'is-focused',\n                  selected: 'react-tags__selected',\n                  selectedTag: 'react-tags__selected-tag',\n                  selectedTagName: 'react-tags__selected-tag-name',\n                  search: 'react-tags__search',\n                  searchWrapper: 'react-tags__search-wrapper',\n                  searchInput: 'react-tags__search-input',\n                  suggestions: 'react-tags__suggestions',\n                  suggestionActive: 'is-active',\n                  suggestionDisabled: 'is-disabled'\n                }}\n              />\n            </Card.Body>\n          </Card>\n        </div>\n\n      </div >\n    )\n  }\n}\n\n\n","import React, { Image, Component } from 'react';\nimport axios from 'axios'\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\"; // requires a loader\nimport { Carousel } from 'react-responsive-carousel';\nimport ReactTags from 'react-tag-autocomplete'\nimport { HashLink as Link } from 'react-router-hash-link';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Container from 'react-bootstrap/Container';\nimport './styles.css'\nimport Spinner from 'react-bootstrap/Spinner';\nimport Badge from 'react-bootstrap/Badge';\n\n//This Component is a child Component of Customers Component\nexport default class Preview extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: false\n    }\n  }\n  tagJsonPath = '/taglist/assets/tags/tags.json'\n  imagesJsonPath = '/taglist/assets/tags/images.json'\n\n  getTagListData() {\n    //assets/tags/taglist.json\n    let images = JSON.parse(localStorage.getItem('images'));\n    let tags = JSON.parse(localStorage.getItem('tags'));\n\n    if (images && tags) {\n      this.setState({\n        tagList: tags, searchResult: tags,\n        suggestions: tags, images: images, isLoading: false\n      })\n    } else {\n      axios.get(this.tagJsonPath).then(response => {\n        axios.get(this.imagesJsonPath).then(images => {\n          localStorage.setItem('images', JSON.stringify(images.data));\n          localStorage.setItem('tags', JSON.stringify(response.data));\n          this.setState({\n            tagList: response.data, searchResult: response.data,\n            suggestions: response.data, images: images.data, isLoading: false\n          })\n        });\n\n      })\n    }\n  }\n\n  //function which is called the first time the component loads\n  componentDidMount() {\n    this.getTagListData();\n  }\n\n  //Function which is called whenver the component is updated\n  componentDidUpdate(prevProps) {\n\n    //get Customer Details only if props has changed\n    if (this.props.val !== prevProps.val) {\n      this.getTagDetails(this.props.val)\n    }\n  }\n\n  onDelete(i) {\n    const tags = this.state.tags.slice(0)\n    tags.splice(i, 1)\n    this.setState({ tags })\n  }\n\n  onAddition(tag) {\n    const tags = [].concat(this.state.tags, tag)\n    this.setState({ tags })\n  }\n\n  //Function to Load the customerdetails data from json.\n  // getTagDetails(id) {\n  //   axios.get('assets/tags/tag' + id + '.json').then(response => {\n  //     this.setState({ customerDetails: response })\n  //   })\n  // };\n\n  handleInputChange = (img) => {\n\n  }\n  render() {\n\n    if (!this.props.showPreview) return (<div></div>);\n    if (this.state.isLoading == true) {\n      return (<>\n        <Button variant=\"primary\" disabled>\n          <Spinner\n            as=\"span\"\n            animation=\"border\"\n            size=\"sm\"\n            role=\"status\"\n            aria-hidden=\"true\"\n          />\n          <span className=\"sr-only\">Loading...</span>\n        </Button>{' '}\n        <Button variant=\"primary\" disabled>\n          <Spinner\n            as=\"span\"\n            animation=\"grow\"\n            size=\"sm\"\n            role=\"status\"\n            aria-hidden=\"true\"\n          />\n      Loading...\n    </Button>\n      </>);\n\n    }\n    let currentRid = this.props.selectedTag['@rid'];\n    let images = this.state.images;\n\n    if (!this.state.tagList) return (<p>Loading Data</p>);\n    let selectedTag = this.props.selectedTag;\n\n    let tagged = images.filter(e => {\n      if (e.tags && e.tags.indexOf(currentRid) > -1) return e\n    });\n\n    return (<div id=\"preview\" className=\"customerdetails\">\n      <Card bsStyle=\"info\" className=\"centeralign\">\n        <Card.Header>\n          <center><Badge><h3><b>Preview</b></h3></Badge></center>\n          <Card.Title ><b>Tag Name:</b> <div className=\"badge primary\">{selectedTag.name}&nbsp;</div>  <b>Description:</b>{selectedTag.description}</Card.Title>\n          {/* <b>ParentTags:</b> {selectedTag.parenTagstHirearchy.map(tag => {\n            return (tag === \"\" ? \"\" : <div className=\"badge primary\">{tag}&nbsp;</div>);\n          })}\n\n          <b>ChildTags:</b> {selectedTag.childTagsHirearchy.map(tag => {\n            return (tag === \"\" ? \"\" : <div className=\"badge primary\">{tag}&nbsp;</div>);\n          })} */}\n\n          <center>This is preview of images related to this tag</center>\n\n          {/* <Link to={{ pathname: \"/taglist#preview\", id: this.props.currentId }} className=\"btn btn-primary\">Preview</Link> */}\n        </Card.Header>\n\n        <Card.Body>\n          <br />\n          {tagged.map((img, index) => {\n            return (\n              <Card style={{ width: '50%', float: 'left' }}>\n                {/* <img src={'./images/' + img.path} onError={(e) => {\n                  e.target.onerror = null; e.target.src = \"https://via.placeholder.com/600x200.png?text=...\"\n                }} /> */}\n\n                <Card.Img variant=\"top\" src={\"http://drive.google.com/thumbnail?id=\" + img.id} />\n                <Card.Body>\n                  <Card.Title>{img.title}</Card.Title>\n                  <Card.Text>{img.description}</Card.Text>\n                </Card.Body>\n              </Card>\n            );\n          })}\n        </Card.Body>\n      </Card>\n    </div >)\n  }\n}","import React, { Component } from 'react';\nimport Button from 'react-bootstrap/Button'\nimport TaggedItems from './TagedItems'\nimport axios from 'axios'\nimport ReactTags from 'react-tag-autocomplete'\nimport logo from './logo.svg';\nimport './styles.css'\nimport Preview from './Preview';\nimport Card from 'react-bootstrap/Card';\nimport Spinner from 'react-bootstrap/Spinner';\nimport Badge from 'react-bootstrap/Badge';\n\n\n\nexport default class TagsList extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      tags: [],\n      searchResult: [],\n      isLoading: true,\n      showPreview: false\n    }\n    this.reactTags = React.createRef()\n  }\n\n  //function which is called the first time the component loads\n  componentDidMount() {\n    this.getTagListData();\n\n  }\n\n  tagJsonPath = '/taglist/assets/tags/tags.json'\n  imagesJsonPath = '/taglist/assets/tags/images.json'\n\n  //Function to get the tag Data from json\n  getTagListData() {\n    // /assets/tags/taglist.json\n    let images = JSON.parse(localStorage.getItem('images'));\n    let tags = JSON.parse(localStorage.getItem('tags'));\n    console.log('images and tags', images, tags);\n    if (images && tags) {\n      console.log('ig...');\n      this.setState({\n        tagList: tags, searchResult: tags,\n        suggestions: tags, images: images, selectedTag: tags[0], tags: [tags[0], tags[1], tags[2]],\n        isLoading: false\n      })\n    } else {\n      axios.get(this.tagJsonPath).then(response => {\n        axios.get(this.imagesJsonPath).then(images => {\n          localStorage.setItem('images', JSON.stringify(images.data));\n          localStorage.setItem('tags', JSON.stringify(response.data));\n          this.setState({\n            tagList: response.data, searchResult: response.data,\n            suggestions: response.data, images: images.data, selectedTag: response.data[5], tags: [response.data[5], response.data[6], response.data[7],],\n            isLoading: false\n          })\n        });\n      })\n    }\n  };\n  onDelete(i) {\n    const tags = this.state.tags.slice(0)\n    tags.splice(i, 1)\n    let matching = [];\n    tags.map(tag => {\n      this.state.tagList.filter(e => { if (e === tag) matching.push(e) });\n    });\n    this.setState({ tags, searchResult: matching })\n  }\n\n  onAddition(tag) {\n    const tags = [].concat(this.state.tags, tag)\n    let matching = [];\n    tags.map(tag => {\n      this.state.tagList.filter(e => { if (e === tag) matching.push(e) });\n    });\n    this.setState({ tags, searchResult: matching })\n  }\n\n\n  render() {\n    if (!this.state.tagList || this.state.isLoading)\n      return (\n        <>\n          <Button variant=\"primary\" disabled>\n            <Spinner\n              as=\"span\"\n              animation=\"border\"\n              size=\"sm\"\n              role=\"status\"\n              aria-hidden=\"true\"\n            />\n            <span className=\"sr-only\">Loading...</span>\n          </Button>{' '}\n          <Button variant=\"primary\" disabled>\n            <Spinner\n              as=\"span\"\n              animation=\"grow\"\n              size=\"sm\"\n              role=\"status\"\n              aria-hidden=\"true\"\n            />\n        Loading...\n      </Button>\n        </>);\n    return (\n      <div>\n        <header className=\"App-header\">\n          <div>\n            <ReactTags\n              ref={this.reactTags}\n              tags={this.state.tags}\n              suggestions={this.state.suggestions}\n              onDelete={this.onDelete.bind(this)}\n              onAddition={this.onAddition.bind(this)}\n              autoresize={false}\n              placeholderText={\"« searchTags\"}\n              minQueryLength={1}\n              classNames={{\n                root: 'react-tags',\n                rootFocused: 'is-focused',\n                selected: 'react-tags__selected',\n                selectedTag: 'react-tags__selected-tag',\n                selectedTagName: 'react-tags__selected-tag-name',\n                search: 'react-tags__search',\n                searchWrapper: 'react-tags__search-wrapper',\n                searchInput: 'react-tags__search-input',\n                suggestions: 'react-tags__suggestions',\n                suggestionActive: 'is-active',\n                suggestionDisabled: 'is-disabled'\n              }}\n            /></div>\n        </header>\n\n        <div className=\"row addmargin\">\n          <div className=\"col-md-2 margin-top-0 parentDiv\">\n            <Badge><h3>Serach Results</h3></Badge>\n            {\n              this.state.searchResult.length === 0 ? \"no tags to show\" :\n                //bsStyle=\"info\"\n                this.state.searchResult.filter(e => { if (this.state.tags.indexOf(e) > -1) return e }).\n                  map(tag => <Card key={tag['@rid']} className=\"centeralign\">\n                    <Card.Header>\n                      <Card.Title>{tag.name}</Card.Title>\n                    </Card.Header>\n                    <Card.Text>\n                      {/* tag.parentTags === null ? \"no parent tags\" :\n                      ParentTags {tag.parentTags.map(tag => {\n                    return (tag === \"\" ? \"\" : <div className=\"badge primary\">{tag}</div>);\n                  })} <br /> */}\n                      {/* \n                  tag.childTags === null ? \"no child tags\" :\n                    ChildTags: {tag.childTags.map(tag => {\n                    return (tag === \"\" ? \"\" : <div className=\"badge primary\">{tag}&nbsp;</div>);\n                  })} <br /> */}\n\n\n                      <Button variant=\"info\" block size=\"lg\" onClick={() => {\n                        console.log('Current:', tag['@rid']);\n                        this.setState({ selectedTag: tag });\n                      }}>\n                        Click to View Details\n              </Button>\n\n                    </Card.Text>\n                  </Card>)\n            }\n          </div>\n\n          <div className=\"col-md-8\">\n\n            <TaggedItems selectedTag={this.state.selectedTag} />\n            <Button variant=\"primary\" block size=\"lg\" onClick={() => {\n              this.setState({ showPreview: !this.state.showPreview });\n\n            }}>\n              {this.state.showPreview ? \"Hide Preview\" : \"Show Preview\"}\n\n            </Button>\n            <Preview selectedTag={this.state.selectedTag} showPreview={this.state.showPreview} />\n          </div>\n          <div className=\"col-md-2 parentDiv\">\n            <Badge><h3>All Tags</h3></Badge>\n            {\n              //bsStyle=\"info\"\n              this.state.tagList.map(tag => <Card key={tag['@rid']} className=\"centeralign\">\n                <Card.Header>\n                  <Card.Title>{tag.name}</Card.Title>\n                </Card.Header>\n                <Card.Text>\n                  {/* ParentTags: {tag.parenTagstHirearchy.map(tag => {\n                  return (tag === \"\" ? \"\" : <div className=\"badge primary\">{tag}&nbsp;</div>);\n                })}<br />\n                    ChildTags: {tag.childTagsHirearchy.map(tag => {\n                  return (tag === \"\" ? \"\" : <div className=\"badge primary\">{tag}&nbsp;</div>);\n                })}<br /> */}\n                  <Button variant=\"info\" block size=\"lg\" onClick={() => {\n                    console.log('CurrentTag:', tag['@rid']);\n                    this.setState({ selectedTag: tag });\n                  }}>\n                    Click to View Details\n              </Button>\n\n                </Card.Text>\n              </Card>)\n            }\n          </div>\n        </div ></div >)\n  }\n\n}\n","import React, { Component } from 'react';\n\nimport './App.css';\nimport TagsList from './TagList'\nimport { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom';\nimport Preview from './Preview'\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      path: \"/\"\n    }\n  }\n\n  render() {\n    console.log(\"Host URL\" + process.env.PUBLIC_URL);\n    return (\n      <Router basename={process.env.PUBLIC_URL}>\n        <div className=\"App\">\n\n          <Switch>\n            {<Route exact path=\"/\" render={() => (<Redirect to=\"/taglist\" />)} />}\n            <Route exact path='/taglist' component={TagsList} />\n            <Route exact path='/output' component={Preview} />\n          </Switch>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}