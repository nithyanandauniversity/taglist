{"version":3,"sources":["Reducer.js","Store.js","PreviewAll.js","PreviewSelected.js","App.js","registerServiceWorker.js","index.js"],"names":["Reducer","state","action","type","console","log","data","Object","objectSpread","selectedTag","isLoading","selectedImage","title","description","value","Error","initialState","currentImage","currentImageTags","taggedImages","tagList","searchResult","suggestions","images","tags","Context","createContext","Store","_ref","children","_useReducer","useReducer","_useReducer2","slicedToArray","dispatch","react_default","a","createElement","Provider","PreviewAll","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","_this2","axios","get","domain","then","response","setState","selected","concat","toConsumableArray","range","count","id","className","Card","Header","Badge","Title","name","Body","map","img","index","indexOf","key","style","width","float","Img","variant","alt","substring","src","url","Text","href","npediaURL","Component","PreviewSelected","queryString","location","search","edit","om","param","headers","Content-Type","_this3","updateRecord","record","put","handleSave","starValueChange","rating","cleanTagDescription","desc","replaceAll","length","imgs","Button","onClick","push","desc1","date","replace","place","desc2","Row","Col","md","padding","color","fontWeight","index_es","tabIndex","startEditingOnEnter","cancelOnEscape","submitOnEnter","submitOnUnfocus","showButtonsOnHover","onSave","inputProps","textDecoration","dist_default","size","onChange","halfStars","sort","b","App","path","src_Store","BrowserRouter","basename","process","Switch","Route","exact","render","Redirect","to","component","isLocalhost","Boolean","window","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","error","ReactDOM","src_App_0","document","getElementById","URL","origin","addEventListener","fetch","status","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.3bea2e2a.chunk.js","sourcesContent":["import axios from 'axios'\n\nconst Reducer = (state, action) => {\n    switch (action.type) {\n        case 'selectTag':\n            console.log('New Ta', action.data);\n            return { ...state, selectedTag: action.data, isLoading: true };\n        case 'selectImage':\n            return { ...state, selectedImage: action.data, isLoading: true };\n        case 'addData':\n            console.log('actionData:', action.data);\n            return { ...state, ...action.data };\n        case 'modifySearchTags':\n            console.log('modified', action.data)\n            return { ...state, ...action.data }\n        case 'modifyImageTags':\n            console.log('modified', action.data)\n            return { ...state, ...action.data }\n        case 'modifyTitle':\n            console.log('modified', action.data)\n            return { ...state, title: action.data }\n        case 'modifyDescription':\n            console.log('modified', action.data)\n            return { ...state, description: action.data }\n        case 'isLoading':\n            console.log('loading..', action.data.value);\n            return { ...state, isLoading: false }\n        default:\n            throw new Error();\n    }\n};\n\nexport default Reducer;","import React, { createContext, useReducer } from \"react\";\nimport Reducer from './Reducer'\n\n\nconst initialState = {\n    selectedTag: null,\n    currentImage: null,\n    currentImageTags: null,\n    taggedImages: null,\n    tagList: null,\n    searchResult: null,\n    suggestions: null,\n    images: null,\n    tags: null,\n    isLoading: true\n}\n\n\nconst Store = ({ children }) => {\n    const [state, dispatch] = useReducer(Reducer, initialState);\n    return (\n        <Context.Provider value={[state, dispatch]}>\n            {children}\n        </Context.Provider>\n    )\n};\n\nexport const Context = createContext(initialState);\nexport default Store;","import React, { Component } from 'react';\nimport axios from 'axios'\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\"; // requires a loader\nimport { Carousel } from 'react-responsive-carousel';\nimport ReactTags from 'react-tag-autocomplete'\nimport './styles.css'\nimport Card from 'react-bootstrap/Card';\nimport Spinner from 'react-bootstrap/Spinner';\nimport Button from 'react-bootstrap/Button';\nimport Badge from 'react-bootstrap/Badge';\nimport range from 'lodash.range';\nimport EdiText from 'react-editext'\n\nexport default class PreviewAll extends Component {\n  // const [state, dispatch] = useContext(Context);\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  componentDidMount() {\n    let domain = 'http://taglist-mirror.herokuapp.com';\n    // domain = 'http://localhost:4000'\n    axios.get(domain + 'taglist/assets/tags/annadhan-updated.json').then(response => {\n      let taggedImages = response.data;\n      let selectedTag = {};\n      selectedTag.name = 'Anna Daan';\n      selectedTag.description = 'Consolidation of all images related to the keywor anna daan';\n      console.log(taggedImages);\n      this.setState({ taggedImages, selectedTag });\n    });\n  }\n\n\n  // 2057- 2074\n  // ];\n\n  render() {\n\n    // const [value, setValue] = useState('');\n\n    const handleSave = (val, index) => {\n    }\n\n    // enormity, swamy serving... al type of ppl, \n    // number of meals...\n    // acroos regions...\n    // 3..4, accros timeli\n\n    //1) large cro,, accros time, location, typee, 3/4\n\n\n    // let selected = [...range(0, 5000)];\n    let selected = [\n      ...range(5, 22),\n      ...range(229, 238),\n      312, 314, 316, 317,\n      ...range(319, 321),\n      ...range(324, 327),\n      ...range(329, 333), ...range(367, 369), 371,\n      392, ...range(525, 545),\n      ...range(572, 578),\n      ...range(621, 630), ...range(736, 738),\n      ...range(781, 784), 799, 800, 804, 806,\n      ...range(919, 937), ...range(976, 982), 1002, 1005, 1006,\n      ...range(1210, 1217),\n      ...range(2051, 2056),\n      ...range(2090, 2093),\n      ...range(2183, 2185),\n      ...range(2231, 2239),\n      ...range(2292, 2293),\n      2421,\n      ...range(2922, 2947),\n      ...range(2992, 2995),\n      ...range(3001, 3007),\n      ...range(3139, 3164),\n      ...range(3186, 3199),\n      3355, 3356, ...range(3411, 3413),\n      3533, ...range(3707, 3726),\n      ...range(3809, 3812),\n      ...range(3919, 3920), ...range(3959, 3966), ...range(3970, 3971), ...range(3981, 3984), 3993, 3944,\n      ...range(3999, 4005),\n\n      ...range(3186, 12726)\n    ]\n\n\n    //? 2629-2784\n    //\n\n\n    //96-98, 392-395, 418-426, 752-755,761,1549-1551\n\n\n    if (this.state.taggedImages == null) return (<h3>Loading</h3>);\n    let count = 0;\n    return (<div id=\"preview\" className=\"customerdetails\">\n      <Card className=\"centeralign\">\n        <Card.Header>\n          <center><Badge><h3><b>Preview</b></h3></Badge></center>\n          <Card.Title ><b>Tag Name:</b> <div className=\"badge primary\">{this.state.selectedTag.name}&nbsp;</div>  <b>Description:</b>{this.state.selectedTag.description}</Card.Title>\n          <center>This is preview of images related to this tag</center>\n        </Card.Header>\n        <Card.Body>\n          <br />\n\n          {this.state.taggedImages.map((img, index) => {\n\n            if (selected.indexOf(index) > -1)\n              return (\n                <Card key={index} style={{ width: '10%', float: 'left' }}>\n                  {/* <img src={'./images/' + img.path} onError={(e) => {\n              e.target.onerror = null; e.target.src = \"https://via.placeholder.com/600x200.png?text=...\"\n            }} /> */}\n                  <Card.Img variant=\"top\" alt={img.description} title={img.description.substring(0, 50)} src={img.url} />\n                  <Card.Body>\n                    <Card.Text>{img.description.substring(0, 50)}</Card.Text>\n                    <a href={img.npediaURL}>src-{index},{++count}</a>\n                  </Card.Body>\n                </Card>\n              );\n          })}\n        </Card.Body>\n      </Card>\n    </div >)\n\n  }\n}","import React, { Component } from 'react';\nimport axios from 'axios'\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\"; // requires a loader\nimport { Carousel } from 'react-responsive-carousel';\nimport ReactTags from 'react-tag-autocomplete'\nimport './styles.css'\nimport Card from 'react-bootstrap/Card';\nimport Row from 'react-bootstrap/Row';\nimport Button from 'react-bootstrap/Button';\nimport Badge from 'react-bootstrap/Badge';\nimport range from 'lodash.range';\nimport EdiText from 'react-editext'\nimport StarPicker from 'react-star-picker';\nimport { sort as fuzzy } from 'fuzzyjs'\nimport places from './Town_Codes_India_2001.json';\nimport { Col, Container } from 'react-bootstrap';\n\nexport default class PreviewSelected extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      queryString: props.location.search,\n      edit: true,\n      om: 'red'\n    };\n  }\n\n  componentDidMount() {\n    let filePath;\n    let param = this.state.queryString;\n    if (param === '?om=red' || param === '') {\n      filePath = '/taglist/assets/tags/annadhan-updated.json';//path is wrong\n      // the path is relative \n      // in local the path is \n      //localhost:port/assets/tags/etc...\n      //in github the file is at\n      //nugithub/taglist/assets/tags/etc..\n      //but as per the code it is expecting it to be at\n      //nugithub/assets/tag/etc....\n      //yes correct it ad app names before the path in git, gennerally i used append appname while publish to git now i missed \n      this.state.om = 'red';\n    }\n    if (param === '?om=orange') {\n      filePath = '/taglist/assets/tags/peace.json'\n      this.state.om = 'orange';\n    }\n\n    let domain = 'http://taglist-mirror.herokuapp.com';\n    // domain = 'http://localhost:4000'\n\n    let url = domain + '/images/' + this.state.om; //local dev\n    // let url = 'https://anandan-mirror.herokuapp.com/images/' + this.state.om;\n    axios.get(url, { headers: { 'Content-Type': 'application/x-www-form-urlencoded' } },\n    ).then(response => {\n      let taggedImages = response.data;\n      let selectedTag = {};\n      selectedTag.name = 'Anna Daan';\n      selectedTag.description = 'Consolidation of all images related to the keyword anna daan';\n      console.log(taggedImages);\n      this.setState({\n        taggedImages, selectedTag,\n      });\n    });\n  }\n\n  //Todo: Load images mnannualy and verify\n  //? 176 - 200, 372 - 378, 396 - 403, 631 - 730, 741 - 771, 809 - 814, 829 - 834, 983-994, 1007-1012\n  //? 107-1083, 1201-1209, 1220-1348,1831-1853,1956-1967, 2000-2048,\n  //? 2057- 2074\n\n\n\n  render() {\n    let domain = 'http://taglist-mirror.herokuapp.com';\n    // domain = 'http://localhost:4000'\n    const updateRecord = (index) => {\n      let url = domain + '/images';\n      let data = {\n        om: this.state.om,\n        record: this.state.taggedImages[index],\n        index: index\n      }\n      axios.put(url, data).then(response => {\n        console.log(response);\n      });\n    }\n\n    const handleSave = (value, props) => {\n      let index = props.index;\n      this.state.taggedImages[index].description = value;\n      updateRecord(index);\n      this.setState({ taggedImages });\n      console.log('update Value', value, props);\n      console.log('update Value', this.state.taggedImages);\n    }\n\n\n    const starValueChange = (value, index) => {\n      this.state.taggedImages[index].rating = value;\n      updateRecord(index);\n      this.setState({ taggedImages });\n      console.log('update Value', value, index);\n      console.log('update Value', this.state.taggedImages);\n    }\n\n\n    const sort = () => {\n      let taggedImages = this.state.taggedImages;\n      taggedImages = taggedImages.sort(function (a, b) {\n        // console.log(a.rating, b.rating);\n        return (a.rating < b.rating)\n      });\n      this.setState({ taggedImages });\n      console.log('Sorted images...as per rating', this.state.taggedImages);\n    }\n\n    const cleanTagDescription = (desc) => {\n      let description = desc.replaceAll('[', '')\n        .replaceAll(']', '')\n        .replaceAll('Anna daan', '')\n        .replaceAll('anna daan', '')\n        .replaceAll('Annadaan', '')\n        .replaceAll(',,', '');\n      description = description[description.length - 1] == ',' ? description.substring(0, description.length - 2) : description;\n      return description;\n    }\n\n    const getPlace = (desc) => {\n      let descs = desc.split(',');\n      descs.map(d => {\n        console.log(places.filter(fuzzy(d, { sourceAccessor: place => place.city_town })));\n      });\n      return desc;\n    }\n\n    //?? 3358-3382 3554-3560,3813-3912\n    if (this.state.taggedImages == null) return (<h3>Loading...</h3>);\n    let taggedImages = this.state.taggedImages;\n\n    let selected = [...range(0, 6000)];\n    if (this.state.om === 'red') selected = [\n      ...range(5, 22),\n      ...range(229, 238),\n      312, 314, 316, 317,\n      ...range(319, 321),\n      ...range(324, 327),\n      ...range(329, 333), ...range(367, 369), 371,\n      392, ...range(525, 545),\n      ...range(572, 578),\n      ...range(621, 630), ...range(736, 738),\n      ...range(781, 784), 799, 800, 804, 806,\n      ...range(919, 937), ...range(976, 982), 1002, 1005, 1006,\n      ...range(1210, 1217),\n      ...range(2051, 2056),\n      ...range(2090, 2093), ...range(2183, 2185),\n      ...range(2231, 2239),\n      ...range(2292, 2293),\n      2421,\n      ...range(2922, 2947),\n      ...range(2992, 2995),\n      ...range(3001, 3007),\n      ...range(3139, 3164),\n      ...range(3186, 3199),\n      3355, 3356,\n      ...range(3411, 3413),\n      3533,\n      ...range(3707, 3726),\n      ...range(3809, 3812),\n      ...range(3919, 3920), ...range(3959, 3966), ...range(3970, 3971), ...range(3981, 3984), 3993, 3944,\n      ...range(3999, 4005)\n    ]\n    console.log(this.state.om, selected);\n\n    let count = 0;\n    // console.log('querry String', qs.parse(this.location.search));\n    let imgs = [];\n    if (this.state.edit == true)\n      return (<div id=\"edit\">\n        {this.state.queryString ? this.state.queryString : ''}\n        <Button onClick={() => this.setState({ edit: false })}>Preivew</Button>\n        {taggedImages.map((img, index) => {\n          if (index % 2 == 1) return;\n          if (taggedImages.length - 1 == index) { taggedImages.push({ url: '', description: '' }) }\n          // if (selected.indexOf(index) > -1) \n          {\n            let img = taggedImages[index];\n\n            let desc1 = {\n              date: img.npediaURL.replace('https://nithyanandapedia.org/wiki/', '').replaceAll('_', ' '),\n              desc: cleanTagDescription(img.description),\n              place: '',  //getPlace(desc),\n              rating: (img.rating == null) ? 0 : img.rating\n            }\n            img = taggedImages[index + 1];\n            let desc2 = {\n              date: img.npediaURL.replace('https://nithyanandapedia.org/wiki/', '').replaceAll('_', ' '),\n              desc: cleanTagDescription(img.description),\n              place: '', //getPlace(desc),\n              rating: (img.rating == null) ? 0 : img.rating\n            }\n\n            return (\n              <div className='imagesblock'>\n                <div className='imagebox'>\n                  <div style={{ width: '45%' }}>\n                    <center><img src={taggedImages[index].url} style={{ width: '100%' }} />\n                      <Row className='justify-content-md-left' ><Col md='auto'><div style={{ padding: '8px 0px 0px 0px', color: 'blue', fontWeight: 'bold' }}><b></b>{desc1.date}:</div></Col>\n                        <Col md='auto'><EdiText type=\"text\" tabIndex={++count} startEditingOnEnter cancelOnEscape submitOnEnter submitOnUnfocus showButtonsOnHover value={desc1.desc} onSave={handleSave} inputProps={{ index: index }} /></Col>\n                        <Col md='auto'><div style={{ padding: '8px 0px 0px 0px' }}><a style={{ textDecoration: 'none', color: 'blue' }} href={taggedImages[index].npediaURL}>(see more)</a></div></Col>\n                      </Row>\n                      <StarPicker size={25} onChange={starValueChange} value={desc1.rating} halfStars name={index} /></center>\n                  </div>\n                  <div style={{ width: '45%' }}>\n                    <center><img src={taggedImages[index + 1].url} style={{ width: '100%' }} />\n                      <Row className='justify-content-md-left' ><Col md='auto'><div style={{ padding: '8px 0px 0px 0px', color: 'blue', fontWeight: 'bold' }}><b></b>{desc2.date}:</div></Col>\n                        <Col md='auto'><EdiText type=\"text\" tabIndex={++count} startEditingOnEnter cancelOnEscape submitOnEnter submitOnUnfocus showButtonsOnHover value={desc2.desc} onSave={handleSave} inputProps={{ index: index + 1 }} /></Col>\n                        <Col md='auto'><div style={{ padding: '8px 0px 0px 0px' }}><a style={{ textDecoration: 'none', color: 'blue' }} href={taggedImages[index + 1].npediaURL}>(see more)</a></div></Col>\n                      </Row>\n                      <StarPicker size={25} onChange={starValueChange} value={desc2.rating} halfStars name={index + 1} /></center>\n                  </div>\n                </div>\n              </div>\n            );\n          }\n        })}\n      </div >)\n    else {\n      sort();\n\n      return (<div id=\"preview\">\n        {this.state.queryString ? this.state.queryString : ''}\n        <Button onClick={() => this.setState({ edit: true })}>Edit</Button>\n        {taggedImages.map((img, index) => {\n          if (index % 2 == 1) return;\n          if (taggedImages.length - 1 == index) { taggedImages.push({ url: '', description: '' }) }\n          if (selected.indexOf(index) > -1) {\n            let img = taggedImages[index];\n            imgs.push(img);\n            let desc1 = {\n              date: img.npediaURL.replace('https://nithyanandapedia.org/wiki/', '').replaceAll('_', ' '),\n              desc: cleanTagDescription(img.description),\n              place: '',  //getPlace(desc),\n              rating: (img.rating == null) ? 0 : img.rating\n            }\n            img = taggedImages[index + 1];\n            let desc2 = {\n              date: img.npediaURL.replace('https://nithyanandapedia.org/wiki/', '').replaceAll('_', ' '),\n              desc: cleanTagDescription(img.description),\n              place: '', //getPlace(desc),\n              rating: (img.rating == null) ? 0 : img.rating\n            }\n            imgs.push(img);\n            console.log('imags..', imgs);\n            return (\n              <div className='imagesblock'>\n                <div className='imagebox'>\n                  <div style={{ width: '45%' }}>\n                    <center><img src={taggedImages[index].url} style={{ width: '100%' }} /></center>\n                    <p><a href={taggedImages[index].npediaURL} style={{ textDecoration: 'none' }}  ><strong>{desc1.date}</strong>:</a> {desc1.desc} <a href={taggedImages[index].npediaURL} style={{ textDecoration: 'none' }}>(See more)</a></p>\n                    {/* <Row className='justify-content-md-left' ><Col md='auto'><div style={{ padding: '8px 0px 0px 0px', color: 'blue', fontWeight: 'bold' }}><b></b>{desc1.date}:</div></Col>\n                        <Col md='auto'><div style={{ padding: '8px 0px 0px 0px' }}>{desc1.desc} </div></Col>\n                        <Col md='auto'><div style={{ padding: '8px 0px 0px 0px' }}><a style={{ textDecoration: 'none', color: 'blue' }} href={taggedImages[index].npediaURL}>(see more)</a></div></Col>\n                      </Row> */}\n                    {/* <StarPicker size={25} onChange={starValueChange} value={desc1.rating} halfStars name={index} name={index} /> */}\n\n                  </div>\n                  <div style={{ width: '45%' }}>\n                    <center><img src={taggedImages[index + 1].url} style={{ width: '100%' }} /></center>\n                    <p><a href={taggedImages[index + 1].npediaURL} style={{ textDecoration: 'none' }}><strong>{desc2.date}</strong>:</a> {desc2.desc} <a href={taggedImages[index + 1].npediaURL} style={{ textDecoration: 'none' }}>(See more)</a></p>\n\n                    {/* <Container fluid className='p-0'> */}\n                    {/* <Row className='justify-content-md-left p-0' ><Col md='auto'><div style={{ color: 'blue', fontWeight: 'bold' }}><b></b>{desc2.date}:</div></Col>\n                          <Col md='auto'><div>{desc2.desc} </div></Col>\n                          <Col md='auto'><div><a style={{ textDecoration: 'none', color: 'blue' }} href={taggedImages[index + 1].npediaURL}>(see more)</a></div></Col>\n                        </Row> */}\n                    {/* </Container> */}\n                    {/* <StarPicker size={25} onChange={starValueChange} value={desc2.rating} halfStars name={index} name={index} /> */}\n\n                  </div>\n                </div>\n              </div>\n            );\n          }\n        })}\n      </div >)\n    }\n  }\n}","import './App.css';\nimport { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport React, { Component, props, useContext, useEffect, useReducer } from 'react';\nimport Button from 'react-bootstrap/Button'\nimport axios from 'axios'\nimport ReactTags from 'react-tag-autocomplete'\nimport './styles.css'\nimport Card from 'react-bootstrap/Card';\nimport Spinner from 'react-bootstrap/Spinner';\nimport Badge from 'react-bootstrap/Badge';\nimport Store, { Context } from './Store';\nimport { Carousel } from 'react-responsive-carousel';\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\"; // requires a loader\nimport { useState } from 'react';\nimport PreviewAll from './PreviewAll'\nimport PreviewSelected from './PreviewSelected'\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      path: \"/\"\n    }\n  }\n\n  render() {\n    console.log(\"Host URL\" + process.env.PUBLIC_URL);\n    return (\n      <Store>\n        <Router basename={process.env.PUBLIC_URL}>\n          <div className=\"App\">\n            <Switch>\n              {<Route exact path=\"/\" render={() => (<Redirect to=\"/output\" />)} />}\n              {/* <Route exact path='/taglist' component={TagList} /> */}\n              <Route exact path='/outputall' component={PreviewAll} />\n              <Route exact path='/output' component={PreviewSelected} />\n            </Switch>\n          </div>\n        </Router>\n      </Store>\n    );\n  }\n}\n\nconst selectTag = (data) => ({ type: 'selectTag', data });\nconst setLoading = (data) => ({ type: 'isLoading', data });\n// const selectImage = (data) => ({ type: 'selectImage' }, data);\n// const addData = (data) => ({ type: 'addData' }, data);\n// const modifySearchTags = (data) => ({ type: 'modifySearchTags', data });\n// const modifyImageTags = (data) => ({ type: 'modifyImageTags', data });\n// const modifyTitle = (data) => ({ type: 'modifyTitle', data });\n// const modifyDescription = (data) => ({ type: 'modifyDescription', data });\n\nconst allTagsURL = 'https://taglist-mirror.herokuapp.com/tags/'; //TODO: addd a revers proxy in appace for this \nconst taggedImagesURL = 'https://taglist-mirror.herokuapp.com/tagged/';\n\nconst TagList = (props) => {\n  const [{ tags, tagList, isLoading, selectedTag, suggestions, searchResult }, dispatch] = useContext(Context);\n\n  let reactTags = React.createRef();\n\n  useEffect(() => {\n    // dispatch(setLoading({ value: true }));\n    axios.get(allTagsURL).then(response => {\n      // let firstId = response.data[4]['@rid'].replace('#', '');\n      // let taggedImages;\n      // axios.get(taggedImagesURL + firstId).then(images => {\n      // taggedImages = images.data;\n      // let taggedImages = images.data.filter(e => {\n      //   if (e.tags && e.tags.indexOf(response.data[10]['@rid']) > -1) return e\n      // });\n\n      // let selectedImageTagIDs = taggedImages[0].tags;\n      // let imageTags = response.data.filter(t => {\n      //   if (selectedImageTagIDs.indexOf(t['@rid']) > -1) return t\n      // });\n\n      let data = {};\n      data.tagList = response.data;\n      data.searchResult = response.data;\n      data.suggestions = response.data;\n      // data.taggedImages = taggedImages;\n\n      data.selectedTag = response.data.filter(tag => { if (tag['@rid'] == '#25:57') return tag })[0];//response.data[4];\n      data.tags = [response.data[5], response.data[6], response.data[7]];\n      // data.selectedImageTags = imageTags;\n      data.isLoading = false;\n      dispatch({ type: 'addData', data });\n      // dispatch(setLoading({ value: false }));\n\n      // });\n    })\n  }, []);\n\n  //gdriv, npedi, nithyanand.org\n\n  //Function to get the tag Data from json\n  function onDelete(i) {\n    const updatedTags = tags.slice(0)\n    updatedTags.splice(i, 1)\n    let matching = [];\n    updatedTags.map(tag => {\n      tagList.filter(e => { if (e === tag) matching.push(e) });\n    });\n    let data = { tags: updatedTags, searchResult: matching }\n    dispatch({ type: 'modifySearchTags', data });\n  }\n\n  function onAddition(tag) {\n    const updatedTags = [].concat(tags, tag);\n    let matching = [];\n    updatedTags.map(tag => {\n      tagList.filter(e => { if (e === tag) matching.push(e) });\n    });\n    // this.setState({ tags, searchResult: matching })\n    let data = { tags: updatedTags, searchResult: matching }\n    dispatch({ type: 'modifySearchTags', data });\n  }\n\n  if (!tagList)\n    return (\n      <>\n        <Button variant=\"primary\" disabled>\n          <Spinner\n            as=\"span\"\n            animation=\"border\"\n            size=\"sm\"\n            role=\"status\"\n            aria-hidden=\"true\"\n          />\n          <span className=\"sr-only\">Loading...</span>\n        </Button>{' '}\n        <Button variant=\"primary\" disabled>\n          <Spinner\n            as=\"span\"\n            animation=\"grow\"\n            size=\"sm\"\n            role=\"status\"\n            aria-hidden=\"true\"\n          />\n        Loading...\n        </Button>\n      </>);\n\n  // let tagged = images.filter(e => {\n  //   if (e.tags && e.tags.indexOf(selectedTag['@rid']) > -1) return e\n  // });\n  return (\n    <div>\n      <header className=\"App-header\">\n        <div>\n          <ReactTags\n            ref={reactTags}\n            tags={tags}\n            suggestions={suggestions}\n            onDelete={onDelete.bind(this)}\n            onAddition={onAddition.bind(this)}\n            autoresize={false}\n            placeholderText={\"« searchTags\"}\n            minQueryLength={1}\n            classNames={{\n              root: 'react-tags',\n              rootFocused: 'is-focused',\n              selected: 'react-tags__selected',\n              selectedTag: 'react-tags__selected-tag',\n              selectedTagName: 'react-tags__selected-tag-name',\n              search: 'react-tags__search',\n              searchWrapper: 'react-tags__search-wrapper',\n              searchInput: 'react-tags__search-input',\n              suggestions: 'react-tags__suggestions',\n              suggestionActive: 'is-active',\n              suggestionDisabled: 'is-disabled'\n            }}\n          /></div>\n      </header>\n      <div className=\"row addmargin\">\n        <List name=\"Search Result\" tags={searchResult} />\n        <div className=\"col-md-8\">\n          <TaggedItems />\n          <Preview />\n        </div>\n        <List name=\"All Tags\" tags={tagList} />\n      </div >\n    </div >)\n}\n\nconst List = (props) => {\n  const [state, dispatch] = useContext(Context);\n  return (\n    <div className=\"col-md-2 margin-top-0 parentDiv\">\n      <Badge><h3>{props.name}</h3></Badge>\n      {\n        props.tags.length === 0 ? <Card.Title>Please try diffrent words </Card.Title> :\n          //bsStyle=\"info\"\n          props.tags.filter(e => { if (props.tags.indexOf(e) > -1) return e }).\n            map(tag => <Card key={tag['@rid']} className=\"centeralign\">\n              <Card.Header>\n                <Card.Title>\n                  <Button alt=\"Click for Details\" variant=\"info\" block size=\"lg\" onClick={() => {\n                    // dispatch(setLoading({ value: true }));\n                    dispatch(selectTag(tag));\n                  }}>\n                    {tag.name}\n                  </Button>\n                </Card.Title>\n              </Card.Header>\n              <Card.Text>\n                {/* //TODO:work on parent tags */}\n                {/* tag.parentTags === null ? \"no parent tags\" :\n                      ParentTags {tag.parentTags.map(tag => {\n                    return (tag === \"\" ? \"\" : <div className=\"badge primary\">{tag}</div>);\n                  })} <br /> */}\n                {/* \n                  tag.childTags === null ? \"no child tags\" :\n                    ChildTags: {tag.childTags.map(tag => {\n                    return (tag === \"\" ? \"\" : <div className=\"badge primary\">{tag}&nbsp;</div>);\n                  })} <br /> */}\n              </Card.Text>\n            </Card>)\n      }\n    </div >\n  )\n}\n\nconst Preview = (props) => {\n  const [state, dispatch] = useContext(Context);\n  if (state.taggedImages == null) return (<h3>Please select a Tag</h3>);\n  return (<div id=\"preview\" className=\"customerdetails\">\n    <Card bsStyle=\"info\" className=\"centeralign\">\n      <Card.Header>\n        <center><Badge><h3><b>Preview</b></h3></Badge></center>\n        <Card.Title ><b>Tag Name:</b> <div className=\"badge primary\">{state.selectedTag.name}&nbsp;</div>  <b>Description:</b>{state.selectedTag.description}</Card.Title>\n        {/* <b>ParentTags:</b> {selectedTag.parenTagstHirearchy.map(tag => {\n        return (tag === \"\" ? \"\" : <div className=\"badge primary\">{tag}&nbsp;</div>);\n      })}\n      <b>ChildTags:</b> {selectedTag.childTagsHirearchy.map(tag => {\n        return (tag === \"\" ? \"\" : <div className=\"badge primary\">{tag}&nbsp;</div>);\n      })} */}\n        <center>This is preview of images related to this tag</center>\n        {/* <Link to={{ pathname: \"/taglist#preview\", id: this.props.currentId }} className=\"btn btn-primary\">Preview</Link> */}\n      </Card.Header>\n      <Card.Body>\n        <br />\n        {state.taggedImages.map((img, index) => {\n          return (\n            <Card style={{ width: '50%', float: 'left' }}>\n              {/* <img src={'./images/' + img.path} onError={(e) => {\n              e.target.onerror = null; e.target.src = \"https://via.placeholder.com/600x200.png?text=...\"\n            }} /> */}\n              <Card.Img variant=\"top\" src={\"http://drive.google.com/thumbnail?id=\" + img.id} />\n              <Card.Body>\n                <Card.Title>{img.title}</Card.Title>\n                <Card.Text>{img.description}</Card.Text>\n              </Card.Body>\n            </Card>\n          );\n        })}\n      </Card.Body>\n    </Card>\n  </div >)\n}\n\nconst TaggedItems = (props) => {\n  const [state, dispatch] = useContext(Context);\n  let reactTags = React.createRef();\n  let isTaggedImageLoading = true;\n\n  let title = state.title;\n  let description = state.description;\n  let selectedTag = state.selectedTag;\n  let suggestions = state.suggestions;\n  let tagged = null;\n  let selectedImageTags = state.selectedImageTags;\n\n\n  useEffect(() => {\n    let id = state.selectedTag['@rid'].toString().replace('#', '');\n    console.log('taggedimages getting tag for Tag id', id, state.selectedTag);\n    axios.get('https://taglist-mirror.herokuapp.com/tagged/' + id).then(taggedImages => {\n      tagged = taggedImages.data;\n      console.log('taggedImages data  :', tagged)\n      let data = { taggedImages: taggedImages.data };\n      dispatch({ type: 'addData', data });\n    });\n  }, [selectedTag]);\n\n  // function useForceUpdate() {\n  //   const [value, setValue] = useState(0); // integer state\n  //   return () => setValue(value => value + 1); // update the state to force render\n  // }\n\n  console.log('tagged', tagged);\n  // need to Reload the componet after Ajax call, that is not happening\n\n  if (tagged == null) {\n    return (\n      <>\n        <Button variant=\"primary\" disabled>\n          <Spinner\n            as=\"span\"\n            animation=\"border\"\n            size=\"sm\"\n            role=\"status\"\n            aria-hidden=\"true\"\n          />\n          <span className=\"sr-only\">Loading...</span>\n        </Button>{' '}\n        <Button variant=\"primary\" disabled>\n          <Spinner\n            as=\"span\"\n            animation=\"grow\"\n            size=\"sm\"\n            role=\"status\"\n            aria-hidden=\"true\"\n          />\n        Loading...\n      </Button>\n      </>);\n  }\n\n  console.log('from taggedItems...', tagged);\n\n  //Function to get the tag Data from json\n  function onDelete(i) {\n    const updatedTags = selectedImageTags.slice(0)\n    updatedTags.splice(i, 1)\n    let data = { selectedImageTags: updatedTags }\n    dispatch({ type: 'modifyImageTags', data });\n  }\n\n  function onAddition(tag) {\n    const updatedTags = [].concat(selectedImageTags, tag);\n    let data = { selectedImageTags: updatedTags, }\n    dispatch({ type: 'modifyImageTags', data });\n  }\n\n  function handleDescrptionChange(e) {\n    let desc = e.target.value;\n    dispatch({ type: 'modifyDescription', desc });\n  }\n\n  function handleTitleChange(e) {\n    let title = e.target.value;\n    dispatch({ type: 'modifyTitle', title })\n  }\n\n  function loadImageTags(index, ele) {\n    let currentImage = tagged[index];\n    let currentImageTagIds = currentImage.tags ? currentImage.tags : [];\n    let currentImageTags = suggestions.filter(e => {\n      if (currentImageTagIds.indexOf(e['@rid']) > -1) return e\n    });\n    console.log('Selected Image, tag Ids, tags', currentImage, currentImageTagIds, currentImageTags)\n    dispatch(\"imageSelected\", currentImage);\n  }\n\n  return (\n    <div>\n      <div id=\"editTags\">\n        <Card className=\"centeralign\">\n          <Card.Header>\n            <center><Badge><h3><b>Edit Tags</b></h3></Badge></center>\n            <Card.Title><b>Tag Name:</b> <div className=\"badge primary\">{selectedTag.name}&nbsp;</div>  <b>Description:</b>{selectedTag.description}</Card.Title>\n            {/* <b>ParentTags:</b> {selectedTag.parentTags.map(tag => {\n            return (tag === \"\" ? \"\" : <div className=\"badge primary\">{tag}&nbsp;</div>);\n          })} */}\n            {/* <b>ChildTags:</b> {selectedTag.childTags.map(tag => {\n              return (tag === \"\" ? \"\" : <div className=\"badge primary\">{tag}&nbsp;</div>);\n            })} */}\n            <center>This Tag is taggged to below images, each image will have their own tag list, which can be added or removed.</center>\n            {/* <Link to={{ pathname: \"/taglist#preview\", id: currentRid }} className=\"btn btn-primary\">Preview</Link> */}\n          </Card.Header>\n          <Card.Body>\n            <br />\n            <ReactTags\n              ref={reactTags}\n              tags={selectedImageTags}\n              autoresize={false}\n              suggestions={suggestions}\n              onDelete={onDelete.bind(this)}\n              onAddition={onAddition.bind(this)}\n              minQueryLength={1}\n              classNames={{\n                root: 'react-tags',\n                rootFocused: 'is-focused',\n                selected: 'react-tags__selected',\n                selectedTag: 'react-tags__selected-tag',\n                selectedTagName: 'react-tags__selected-tag-name',\n                search: 'react-tags__search',\n                searchWrapper: 'react-tags__search-wrapper',\n                searchInput: 'react-tags__search-input',\n                suggestions: 'react-tags__suggestions',\n                suggestionActive: 'is-active',\n                suggestionDisabled: 'is-disabled'\n              }}\n            />\n          </Card.Body>\n        </Card>\n        {console.log('Render in progress..')}\n        <Carousel onChange={(index, ele) => loadImageTags(index, ele)} dynamicHeight={true} showIndicators={false}\t>\n          {tagged.map(img => {\n            console.log('render in progress..')\n            return (<div key={img['@rid']}>\n              <form style={{ 'textAlign': 'left' }}>\n                <label>Title: </label><input className=\"form-control\" name=\"title\"\n                  type=\"text\"\n                  value={title}\n                  onChange={handleTitleChange} />\n                <label>Description: </label><input className=\"form-control\" name=\"description\"\n                  type=\"text\"\n                  value={state.description}\n                  onChange={handleDescrptionChange} />\n              </form>\n                    File:{img.name}, Path: {img.path}, Title: {img.title}, Dimension:{img.width}x{img.height}\n              <img src={\"http://drive.google.com/thumbnail?id=\" + img.id} onError={(e) => { e.target.onerror = null; e.target.src = \"https://via.placeholder.com/600x200.png?text=...\" }} />\n              <br />\n            </div>);\n          })}\n        </Carousel>\n\n      </div>\n    </div>\n  )\n}\n\n\nconst PreviewJSON1 = (props) => {\n  // const [state, dispatch] = useContext(Context);\n\n  let taggedImages;\n  let selectedTag = {};\n  const [images, setImages] = useState(0);\n  useEffect(() => {\n    axios.get('/assets/tags/annadhan.json').then(response => {\n      taggedImages = response.data;\n      selectedTag.name = 'Anna Daan';\n      selectedTag.description = 'Consolidation of all images related to the keywor anna daan';\n      console.log(taggedImages);\n      setImages(1);\n    });\n  }, [taggedImages]);\n\n  if (taggedImages == null) return (<h3>Please select a Tag</h3>);\n  return (<div id=\"preview\" className=\"customerdetails\">\n    <Card bsStyle=\"info\" className=\"centeralign\">\n      <Card.Header>\n        <center><Badge><h3><b>Preview</b></h3></Badge></center>\n        <Card.Title ><b>Tag Name:</b> <div className=\"badge primary\">{selectedTag.name}&nbsp;</div>  <b>Description:</b>{selectedTag.description}</Card.Title>\n        <center>This is preview of images related to this tag</center>\n      </Card.Header>\n      <Card.Body>\n        <br />\n        {taggedImages.map((img, index) => {\n          return (\n            <Card style={{ width: '10%', float: 'left' }}>\n              {/* <img src={'./images/' + img.path} onError={(e) => {\n              e.target.onerror = null; e.target.src = \"https://via.placeholder.com/600x200.png?text=...\"\n            }} /> */}\n              <Card.Img variant=\"top\" src={img.url} />\n              <Card.Body>\n                <Card.Title>{img.title}</Card.Title>\n                <Card.Text>{img.description}</Card.Text>\n                <a href={img.npediaURL}>src</a>\n              </Card.Body>\n            </Card>\n          );\n        })}\n      </Card.Body>\n    </Card>\n  </div >)\n\n}\nexport default App;","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('images-block'));\nregisterServiceWorker();\n"],"sourceRoot":""}